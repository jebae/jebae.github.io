{"version":3,"sources":["webpack:///./src/stylesheets/PostList.module.scss","webpack:///./src/containers/PostList.tsx","webpack:///./src/containers/PostListByCategory.tsx"],"names":["module","exports","PostList","categories","tags","posts","className","styles","container","postList","map","category","date","slug","title","description","key","createdAt","href","tag","navigation","pageQuery","PostListByCategory","data","pageContext","hideNavBtnIfSmallDevice","src","CategoryIcon","allMarkdownRemark","edges","frontmatter","node"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,SAAW,mCAAmC,WAAa,qCAAqC,MAAQ,kC,kCCD1K,0DA+CeC,IA7BmB,SAAC,GAAD,IACjCC,EADiC,EACjCA,WAAYC,EADqB,EACrBA,KAAMC,EADe,EACfA,MADe,OAGjC,yBAAKC,UAAYC,IAAOC,WACvB,6BAASF,UAAYC,IAAOE,UAC1BJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAAMT,EAAzB,EAAyBA,KAAMU,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,YAAtC,OACV,kBAAC,WAAD,CAAUC,IAAMH,GACf,kBAAC,IAAD,CACCG,IAAMH,EACNI,UAAYL,EACZE,MAAQA,EACRI,KAAOL,EACPE,YAAcA,EACdJ,SAAW,CAAEO,KAAM,aAAaP,EAAS,GAAMA,SAAUA,EAAS,IAClEP,KAAOA,EAAKM,KAAI,SAAAS,GAAG,MAAK,CAAED,KAAM,QAAQC,EAAOA,YAEhD,kCAIH,6BAASb,UAAYC,IAAOa,YAC3B,kBAAC,IAAD,CACCjB,WAAaA,EACbC,KAAOA,Q,wLCQEiB,EAAY,aAsBVC,UAxC6B,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,KAD2C,IACrCC,YAAerB,EADsB,EACtBA,WAAYC,EADU,EACVA,KAAMO,EADI,EACJA,SADI,OAG3C,kBAAC,IAAD,CAAQR,WAAaA,EAAaC,KAAOA,EAAOqB,yBAA0B,GACzE,kBAAC,IAAD,MACA,6BAASnB,UAAYC,IAAOO,OAC3B,yBAAKY,IAAMC,MACX,4BAAKhB,IAEN,kBAAC,IAAD,CACCR,WAAaA,EACbC,KAAOA,EACPC,MAAQkB,EAAKK,kBAAkBC,MAAMnB,KACpC,gBAAWoB,EAAX,EAAGC,KAAQD,YAAX,wBAAqCA","file":"component---src-containers-post-list-by-category-tsx-ff95e6251f312e615c2f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostList-module--container--3FzQq\",\"postList\":\"PostList-module--postList--2miCW\",\"navigation\":\"PostList-module--navigation--2qn5Y\",\"title\":\"PostList-module--title--3U3zm\"};","import { NavigationBox, PostListItem } from \"@components\";\n\nimport React, { Fragment } from \"react\";\nimport styles from \"@styles/PostList.module.scss\";\n\ntype Props = {\n\tcategories: { category: string, count: number, href: string }[];\n\ttags: { tag: string, count: number, href: string }[];\n\tposts: {\n\t\tcategory: string[]\n\t\tdate: string\n\t\tslug: string\n\t\ttags: string[]\n\t\ttitle: string\n\t\tdescription: string\n\t}[]\n}\n\nconst PostList: React.FC<Props> = ({\n\tcategories, tags, posts\n}) => (\n\t<div className={ styles.container }>\n\t\t<section className={ styles.postList }>\n\t\t\t{posts.map(({ category, date, slug, tags, title, description }) => (\n\t\t\t\t<Fragment key={ slug }>\n\t\t\t\t\t<PostListItem\n\t\t\t\t\t\tkey={ slug }\n\t\t\t\t\t\tcreatedAt={ date }\n\t\t\t\t\t\ttitle={ title }\n\t\t\t\t\t\thref={ slug }\n\t\t\t\t\t\tdescription={ description }\n\t\t\t\t\t\tcategory={ { href: `/category/${category[0]}`, category: category[0] } }\n\t\t\t\t\t\ttags={ tags.map(tag => ({ href: `/tag/${tag}`, tag })) }\n\t\t\t\t\t/>\n\t\t\t\t\t<hr/>\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</section>\n\t\t<section className={ styles.navigation }>\n\t\t\t<NavigationBox\n\t\t\t\tcategories={ categories }\n\t\t\t\ttags={ tags }\n\t\t\t/>\n\t\t</section>\n\t</div>\n);\n\nexport default PostList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Layout, Head } from \"@components\";\nimport PostList from \"./PostList\";\nimport styles from \"@styles/PostList.module.scss\";\nimport CategoryIcon from \"@assets/icons/category.svg\";\n\ntype Props = {\n\tpageContext: {\n\t\tcategory: string\n\t\tcategories: { category: string, count: number, href: string }[];\n\t\ttags: { tag: string, count: number, href: string }[];\n\t}\n\tdata: {\n\t\tallMarkdownRemark: {\n\t\t\tedges: {\n\t\t\t\tnode: {\n\t\t\t\t\tfrontmatter: {\n\t\t\t\t\t\tcategory: string[]\n\t\t\t\t\t\tdate: string\n\t\t\t\t\t\tslug: string\n\t\t\t\t\t\tdescription: string\n\t\t\t\t\t\ttags: string[]\n\t\t\t\t\t\ttitle: string\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}[]\n\t\t}\n\t}\n}\n\nconst PostListByCategory: React.FC<Props> = ({\n\tdata, pageContext: { categories, tags, category }\n}) => (\n\t<Layout categories={ categories } tags={ tags } hideNavBtnIfSmallDevice={ true }>\n\t\t<Head/>\n\t\t<section className={ styles.title }>\n\t\t\t<img src={ CategoryIcon }/>\n\t\t\t<h2>{category}</h2>\n\t\t</section>\n\t\t<PostList\n\t\t\tcategories={ categories }\n\t\t\ttags={ tags }\n\t\t\tposts={ data.allMarkdownRemark.edges.map(\n\t\t\t\t({ node: { frontmatter } }) => ({ ...frontmatter })) }\n\t\t/>\n\t</Layout>\n);\n\nexport const pageQuery = graphql`\n\tquery ($category: String!) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: {frontmatter: {category: { eq: $category }}}\n\t\t\tsort: {fields: frontmatter___date, order: DESC},\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\tdate(formatString: \"YYYY년 MM월 DD일\")\n\t\t\t\t\t\ttags\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default PostListByCategory;\n"],"sourceRoot":""}