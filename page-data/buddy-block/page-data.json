{"componentChunkName":"component---src-containers-post-layout-tsx","path":"/buddy-block","result":{"data":{"markdownRemark":{"html":"<h3>메모리 외부 단편화</h3>\n<p>메모리는 운영체제가 관리하는 컴퓨터의 중요한 자원입니다. 프로세스는 운영체제로부터 필요한 만큼의 메모리를 할당받고 실행이 끝나면 운영체제에게 반납합니다. 컴퓨터에서 오직 하나의 프로세스만 실행할 수 있다면 메모리의 할당과 해제에 전혀 문제가 없습니다. 아래 그림과 같이 프로세스가 종료된 뒤에는 항상 할당할 수 있는 메모리가 존재하기 때문입니다.</p>\n<p>&#x3C;하나의 프로세스가 메모리를 점유하고 할당></p>\n<p>하지만 대다수의 운영체제는 여러 프로세스를 동시에 실행하는 멀티태스킹을 지원합니다. 프로세스들은 각자에게 필요한 메모리를 운영체제로부터 할당받고 해제하기를 반복합니다. 만약 여러 프로세스가 메모리를 차례대로 할당받게 되면 메모리의 상태는 아래와 같을 것입니다.</p>\n<p>&#x3C;여러 프로세스가 메모리를 점유한></p>\n<p>메모리는 여러 프로세스들을 위해 분리되어 있지도 않고 프로세스를 위해 아메바처럼 복제를 만들지도 않습니다. 메모리 주소는 연속적이고 프로세스는 각자의 메모리 시작주소로부터 원하는 크기만큼의 메모리를 할당받습니다.</p>\n<ul>\n<li>메모리에 할당하지 않았지만 사용할 수 없는 파편들이 생김</li>\n<li>이를 해결하기 위한 한 가지 방법 버디 블록 알고리즘</li>\n</ul>\n<h3>버디 블록 알고리즘</h3>\n<ul>\n<li>하나의 커다란 메모리를 지정한 가장 작은 크기까지 쪼개는 것부터 시작</li>\n<li>이 때 계층간의 관계는 idx, idx * 2, idx * 2 + 1 로 부모 자식, buddy 관계</li>\n<li>프로세스가 요구하는 메모리 크기를 커버할 수 있는 블록을 할당 이 때 해당 레벨에 남는 블록이 없다면 부모로부터 split</li>\n<li>버디 블록 알고리즘을 보조하는 자료 구조 등장</li>\n<li>메모리가 사용 가능한지 어떻게 판단? bitmaps</li>\n<li>free 시 ptr 에 얼마만큼의 메모리가 할당되었는지? levelOfBlock 이용</li>\n</ul>\n<h3>코드</h3>\n<ul>\n<li>홀수로 남는 경우 잉여 블록! avail 한 상태로 남겨둠</li>\n</ul>","frontmatter":{"date":null,"slug":"/buddy-block","title":"버디 블록 알고리즘","tags":["메모리 단편화","동적 메모리"],"category":["운영체제"],"description":"메모리의 외부 단편화를 해결하는 방법"}}},"pageContext":{"slug":"/buddy-block","categories":[{"category":"선형대수학","count":26,"href":"/category/선형대수학"},{"category":"그래픽스","count":14,"href":"/category/그래픽스"},{"category":"병렬 프로그래밍","count":3,"href":"/category/병렬 프로그래밍"},{"category":"최적화 문제","count":3,"href":"/category/최적화 문제"},{"category":"알고리즘","count":2,"href":"/category/알고리즘"},{"category":"미적분","count":2,"href":"/category/미적분"},{"category":"운영체제","count":1,"href":"/category/운영체제"}],"tags":[{"tag":"코딩 더 매트릭스","count":24,"href":"/tag/코딩 더 매트릭스"},{"tag":"python","count":24,"href":"/tag/python"},{"tag":"레이 트레이싱","count":7,"href":"/tag/레이 트레이싱"},{"tag":"알고리즘","count":4,"href":"/tag/알고리즘"},{"tag":"OpenCL","count":3,"href":"/tag/OpenCL"},{"tag":"C","count":3,"href":"/tag/C"},{"tag":"회전","count":3,"href":"/tag/회전"},{"tag":"행렬","count":2,"href":"/tag/행렬"},{"tag":"그래픽스","count":2,"href":"/tag/그래픽스"},{"tag":"벡터","count":2,"href":"/tag/벡터"},{"tag":"라그랑주 승수법","count":2,"href":"/tag/라그랑주 승수법"},{"tag":"메모리 단편화","count":1,"href":"/tag/메모리 단편화"},{"tag":"동적 메모리","count":1,"href":"/tag/동적 메모리"},{"tag":"기저","count":1,"href":"/tag/기저"},{"tag":"정렬","count":1,"href":"/tag/정렬"},{"tag":"연결 리스트","count":1,"href":"/tag/연결 리스트"},{"tag":"문자열 탐색","count":1,"href":"/tag/문자열 탐색"},{"tag":"복소수","count":1,"href":"/tag/복소수"},{"tag":"사원수","count":1,"href":"/tag/사원수"},{"tag":"쿼터니언","count":1,"href":"/tag/쿼터니언"},{"tag":"선형대수학","count":1,"href":"/tag/선형대수학"},{"tag":"Gradient 벡터","count":1,"href":"/tag/Gradient 벡터"},{"tag":"편미분","count":1,"href":"/tag/편미분"},{"tag":"전미분","count":1,"href":"/tag/전미분"},{"tag":"확률분포","count":1,"href":"/tag/확률분포"}]}}}